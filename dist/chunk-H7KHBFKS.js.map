{"version":3,"sources":["../node_modules/.store/ms-npm-2.1.2-ec0c1512ff/package/index.js","../node_modules/.store/debug-virtual-526ba71593/package/src/common.js","../node_modules/.store/debug-virtual-526ba71593/package/src/browser.js","../node_modules/.store/supports-color-npm-9.4.0-a415f39758/package/index.js","../node_modules/.store/debug-virtual-526ba71593/package/src/node.js","../node_modules/.store/debug-virtual-526ba71593/package/src/index.js","../src/core/scaffolding-module.ts","../src/core/scaffolding-handler.ts","../src/core/scaffolding-finder.ts","../src/index.ts"],"names":["s","m","h","d","w","y","module","exports","val","options","type","length","parse","isFinite","long","fmtLong","fmtShort","Error","JSON","stringify","str","String","match","exec","n","parseFloat","toLowerCase","undefined","ms","msAbs","Math","abs","round","plural","name","isPlural","setup","env","createDebug","debug","default","coerce","disable","enable","enabled","humanize","require","destroy","Object","keys","forEach","key","names","skips","formatters","selectColor","namespace","hash","i","charCodeAt","colors","prevTime","enableOverride","namespacesCache","enabledCache","args","self","curr","Number","Date","diff","prev","unshift","index","replace","format","formatter","call","splice","formatArgs","logFn","log","apply","useColors","color","extend","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","save","split","len","push","RegExp","slice","map","toNamespace","join","test","regexp","toString","substring","stack","message","console","warn","load","storage","localstorage","warned","window","process","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","c","lastC","setItem","removeItem","error","r","getItem","DEBUG","localStorage","j","os","tty","hasFlag","flag","argv","globalThis","Deno","prefix","startsWith","position","indexOf","terminatorPosition","envForceColor","FORCE_COLOR","min","translateLevel","level","hasBasic","has256","has16m","_supportsColor","haveStream","streamIsTTY","sniffFlags","noFlagForceColor","flagForceColor","forceColor","TERM","platform","osRelease","release","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","version","TERM_PROGRAM_VERSION","TERM_PROGRAM","createSupportsColor","stream","isTTY","supportsColor","stdout","isatty","stderr","util","deprecate","inspectOpts","filter","reduce","obj","prop","_","k","toUpperCase","Boolean","fd","colorCode","getDate","hideDate","toISOString","write","o","inspect","trim","O","browser","_debug","ScaffoldingModule","priority","constructor","requests","executors","context","plugins","request","ex","executor","description","state","import_debug","Project","ScaffoldingHandler","tsMorphProject","modulesDict","logger","cwd","tsConfigFilePath","register","modules","values","config","store","arguments","x","requestExecutors","exe","entries","every","value","disabled","optional","sort","a","b","reset","glob","jsVariants","extname","pathToFileURL","prepare","tryRequireThenImport","result","importEsm","Function","e","code","urlForConfig","href","loadModule","path","ext","includes","findScaffoldFiles","file","dot","ignore","tsMorph","semver","zod"],"mappings":"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","sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import process from 'node:process';\nimport os from 'node:os';\nimport tty from 'node:tty';\n\n// From: https://github.com/sindresorhus/has-flag/blob/main/index.js\n/// function hasFlag(flag, argv = globalThis.Deno?.args ?? process.argv) {\nfunction hasFlag(flag, argv = globalThis.Deno ? globalThis.Deno.args : process.argv) {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n}\n\nconst {env} = process;\n\nlet flagForceColor;\nif (\n\thasFlag('no-color')\n\t|| hasFlag('no-colors')\n\t|| hasFlag('color=false')\n\t|| hasFlag('color=never')\n) {\n\tflagForceColor = 0;\n} else if (\n\thasFlag('color')\n\t|| hasFlag('colors')\n\t|| hasFlag('color=true')\n\t|| hasFlag('color=always')\n) {\n\tflagForceColor = 1;\n}\n\nfunction envForceColor() {\n\tif ('FORCE_COLOR' in env) {\n\t\tif (env.FORCE_COLOR === 'true') {\n\t\t\treturn 1;\n\t\t}\n\n\t\tif (env.FORCE_COLOR === 'false') {\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn env.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3,\n\t};\n}\n\nfunction _supportsColor(haveStream, {streamIsTTY, sniffFlags = true} = {}) {\n\tconst noFlagForceColor = envForceColor();\n\tif (noFlagForceColor !== undefined) {\n\t\tflagForceColor = noFlagForceColor;\n\t}\n\n\tconst forceColor = sniffFlags ? flagForceColor : noFlagForceColor;\n\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (sniffFlags) {\n\t\tif (hasFlag('color=16m')\n\t\t\t|| hasFlag('color=full')\n\t\t\t|| hasFlag('color=truecolor')) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (hasFlag('color=256')) {\n\t\t\treturn 2;\n\t\t}\n\t}\n\n\t// Check for Azure DevOps pipelines.\n\t// Has to be above the `!streamIsTTY` check.\n\tif ('TF_BUILD' in env && 'AGENT_NAME' in env) {\n\t\treturn 1;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10\n\t\t\t&& Number(osRelease[2]) >= 10_586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14_931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif ('GITHUB_ACTIONS' in env || 'GITEA_ACTIONS' in env) {\n\t\t\treturn 3;\n\t\t}\n\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'BUILDKITE', 'DRONE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif (env.TERM === 'xterm-kitty') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = Number.parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app': {\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\t}\n\n\t\t\tcase 'Apple_Terminal': {\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nexport function createSupportsColor(stream, options = {}) {\n\tconst level = _supportsColor(stream, {\n\t\tstreamIsTTY: stream && stream.isTTY,\n\t\t...options,\n\t});\n\n\treturn translateLevel(level);\n}\n\nconst supportsColor = {\n\tstdout: createSupportsColor({isTTY: tty.isatty(1)}),\n\tstderr: createSupportsColor({isTTY: tty.isatty(2)}),\n};\n\nexport default supportsColor;\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","import { debug as _debug } from 'debug';\nimport type { Project } from 'ts-morph';\n\nimport {\n  type ScaffoldingExecutor,\n  type ScaffoldingModuleAbstract,\n  type ScaffoldingModuleLogger,\n  type ScaffoldingRequest,\n} from './scaffolding.interfaces';\n\nconst debug = _debug('scaffold:module');\n\n/**\n * Define a scaffold module\n *\n * todo, Options are stored in the 'scaffold.lock' file and are available to the module function\n *  at initialization.\n *\n * Based on the options, the module exposes a set of actions and a set of executors to run the actions.\n *\n * The orchestrator will run the actions and executors in the correct order, store the configuration and a journal\n *  of the actions and executors that were run.\n *\n */\nexport class ScaffoldingModule implements ScaffoldingModuleAbstract {\n  public version: string = '1.0.0';\n  public priority: number = 50;\n  public enabled = true;\n\n  constructor(\n    public name?: string,\n    public requests: ScaffoldingRequest[] = [],\n    public executors: ScaffoldingExecutor[] = [],\n  ) {}\n\n  /**\n   * Execute the module requests\n   *  by default, this will execute all the requests, made by this module in order of creation\n   *  when the order is important, or there are additional tasks, you can extend this class\n   *\n   *  ScaffoldingModuleAbstract.exec\n   */\n  public async exec(\n    context: {\n      cwd: string;\n      modules: Record<string, ScaffoldingModuleAbstract>;\n      config: Record<string, any>;\n      store: Record<string, any>;\n      arguments: Record<string, any>;\n    },\n    plugins: {\n      tsMorphProject: Project;\n      logger: ScaffoldingModuleLogger;\n    },\n  ) {\n    for await (const request of this.requests) {\n      if (!request.executors || request.executors.length < 1) {\n        continue;\n      }\n      for (const ex of request.executors) {\n        if (!ex.executor.exec) {\n          continue;\n        }\n        debug(\n          `execute ${this.name} -> ${ex.executor.match.module} ${ex.executor.description ? ` -> ${ex.executor.description}` : ''}`,\n        );\n        /**\n         * ScaffoldingExecutor.exec\n         */\n        await ex.executor.exec(\n          {\n            request,\n            state: ex.context.state,\n          },\n          plugins,\n        );\n      }\n    }\n    return {\n      // store\n    };\n  }\n}\n","import { debug as _debug } from 'debug';\nimport { Project } from 'ts-morph';\n\nimport type { ScaffoldingExecutor, ScaffoldingModuleAbstract } from './scaffolding.interfaces';\n\nconst debug = _debug('scaffold:handler');\n\nexport class ScaffoldingHandler<SM extends ScaffoldingModuleAbstract> {\n  public readonly tsMorphProject;\n  public readonly modulesDict: Record<string, SM> = {};\n  public readonly executors: ScaffoldingExecutor[] = [];\n\n  public logger(level: 'info' | 'warn' | 'error', message: string, context?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`[${level}] ${context ? `[${context}]` : ''} ${message}`);\n  }\n\n  constructor(\n    //\n    public readonly cwd: string = process.cwd(),\n  ) {\n    this.tsMorphProject = new Project({ tsConfigFilePath: `${cwd}/tsconfig.json` });\n  }\n\n  register(module: SM) {\n    if (!module.name) {\n      throw new Error('name is required');\n    }\n    if (module.name in this.modulesDict) {\n      throw new Error(`ScaffoldingModule ${module.name} already exists`);\n    }\n    // debug(`register ${module.name}`);\n    this.modulesDict[module.name] = module;\n  }\n\n  /**\n   * Initialize all modules\n   */\n  async init() {\n    // list of all registered modules\n    const modules = Object.values(this.modulesDict);\n\n    // init all modules\n    for (const module of modules) {\n      /**\n       * ScaffoldingModuleAbstract.init\n       */\n      if (module.init) {\n        await module.init(\n          {\n            cwd: this.cwd,\n            // todo, pass in config\n            modules: this.modulesDict,\n            config: {},\n            // todo, pass in persisted store\n            store: {},\n            // todo, pass in run arguments\n            arguments: {},\n          },\n          {\n            tsMorphProject: this.tsMorphProject,\n            // todo, expand logger for more contextual messages\n            logger: this.logger,\n          },\n        );\n        // the module might have disabled itself by setting enabled to false\n      } else {\n        debug(`init* ${module.name}`);\n      }\n    }\n\n    // register all executors\n    for (const module of modules) {\n      this.executors.push(\n        ...module.executors.map((x) => ({\n          // add module to matcher\n          ...x,\n          match: { ...x.match, module: module.name },\n        })),\n      );\n    }\n\n    /**\n     * Initialize all module requests\n     */\n    for (const module of modules) {\n      for (const request of module.requests.filter((x) => Object.keys(x.match).length > 0)) {\n        request.module = module;\n        const requestExecutors: {\n          context: {\n            state?: Record<string, any>;\n          };\n          executor: ScaffoldingExecutor;\n        }[] = [];\n        for await (const exe of this.executors) {\n          if (!exe.match || !Object.entries(request.match).every(([key, value]) => exe.match[key] === value)) {\n            continue;\n          }\n          if (exe.init) {\n            /**\n             * ScaffoldingExecutor.init\n             */\n            const { disabled, state } = await exe.init(\n              {\n                request,\n              },\n              {\n                tsMorphProject: this.tsMorphProject,\n                // todo, expand logger for more contextual messages\n                logger: this.logger,\n              },\n              // stub for response\n              {\n                disabled: false,\n                state: {},\n              },\n            );\n            if (!disabled) {\n              // init executor\n              debug(\n                `init ${module.name}\\t -> ${exe?.match.module} \\t${exe?.description ? ` -> ${exe.description}` : ''}`,\n              );\n              requestExecutors.push({\n                context: {\n                  state,\n                },\n                executor: exe,\n              });\n            }\n          } else {\n            debug(\n              `init* ${module.name}\\t -> ${exe?.match.module} \\t${exe?.description ? ` -> ${exe.description}` : ''}`,\n            );\n            requestExecutors.push({\n              context: {},\n              executor: exe,\n            });\n          }\n        }\n        request.executors = requestExecutors;\n        if (request.executors.length === 0 && !request.optional) {\n          // todo, add more context to the error message\n          throw new Error(\n            `No executors found for ${module.name} ${request.description ? ` -> ${request.description}` : ''}`,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Execute all modules\n   */\n  async exec() {\n    const modules = Object.values(this.modulesDict)\n      // filter out disabled modules\n      .filter((x) => x.enabled)\n      // order by priority\n      .sort((a, b) => a.priority - b.priority);\n\n    for await (const module of modules) {\n      /**\n       * ScaffoldingModuleAbstract.exec\n       */\n      // const { store } =\n      await module.exec(\n        {\n          cwd: this.cwd,\n          modules: this.modulesDict,\n          config: {}, // todo, pass in config\n          store: {}, // todo pass in persisted store\n          arguments: {}, // todo, pass in run arguments\n        },\n        {\n          tsMorphProject: this.tsMorphProject,\n          // todo, expand logger for more contextual messages\n          logger: this.logger,\n        },\n      );\n      // todo, persist the returned store\n    }\n\n    // apply code changes\n    await this.tsMorphProject.save();\n  }\n\n  /**\n   * De-register all modules\n   */\n  reset() {\n    for (const key in this.modulesDict) {\n      delete this.modulesDict[key];\n    }\n  }\n}\n","import { debug as _debug } from 'debug';\nimport { glob } from 'fast-glob';\nimport { jsVariants } from 'interpret';\nimport { extname } from 'node:path';\nimport { pathToFileURL } from 'node:url';\nimport { prepare } from 'rechoir';\n\nimport type { ScaffoldingModule } from './scaffolding-module';\n\nconst debug = _debug('scaffold:finder');\n\n/**\n * Import or require a module\n *  this allows for runtime .ts support\n * @see https://github.com/webpack/webpack-cli/blob/e480934116ec190d915e83fef8e2d945717963cb/packages/webpack-cli/src/webpack-cli.ts#L327\n */\nasync function tryRequireThenImport(module: string): Promise<any> {\n  let result;\n  try {\n    result = require(module);\n  } catch (error: any) {\n    let importEsm: ((module: string) => Promise<{ default: any }>) | undefined;\n    try {\n      importEsm = new Function('id', 'return import(id);') as any;\n    } catch (e) {\n      importEsm = undefined;\n    }\n    if (error.code === 'ERR_REQUIRE_ESM' && importEsm) {\n      const urlForConfig = pathToFileURL(module).href;\n      result = (await importEsm(urlForConfig)).default;\n      return result;\n    }\n    throw error;\n  }\n  // For babel/typescript\n  if (result && typeof result === 'object' && 'default' in result) result = result.default || {};\n  return result || {};\n}\n\n/**\n * Load a module from a file path\n * @see https://github.com/webpack/webpack-cli/blob/e480934116ec190d915e83fef8e2d945717963cb/packages/webpack-cli/src/webpack-cli.ts#L1717\n */\nexport async function loadModule(path: string): Promise<any> {\n  const ext = extname(path);\n  if (ext === '.json' || !Object.keys(jsVariants).includes(ext)) {\n    throw new Error(`Unsupported file type: ${ext}`);\n  }\n  prepare(jsVariants, path);\n  return await tryRequireThenImport(path);\n}\n\nexport async function* findScaffoldFiles<SM extends ScaffoldingModule>(context: { cwd: string }): AsyncGenerator<SM> {\n  for (const file of await glob(['**/.*.scaffold.*', '**/.scaffold.*'], {\n    cwd: context.cwd,\n    dot: true, // allow dot files\n    ignore: ['node_modules'],\n  })) {\n    debug(`found ${file}`);\n    try {\n      yield await loadModule(`${context.cwd}/${file}`);\n    } catch (error) {\n      // todo messages\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n}\n","export { ScaffoldingModule } from './core/scaffolding-module';\nexport {\n  type ScaffoldingModuleAbstract,\n  type ScaffoldingExecutor,\n  type ScaffoldingRequest,\n  type ScaffoldingModuleLogger,\n} from './core/scaffolding.interfaces';\n\nexport { ScaffoldingHandler } from './core/scaffolding-handler';\nexport { findScaffoldFiles } from './core/scaffolding-finder';\n\n/**\n * Plugins commonly used in scaffolding\n *  export them to enforce consistent usage\n */\nexport * as tsMorph from 'ts-morph';\nexport * as semver from 'semver';\nexport * as zod from 'zod';\n"]}